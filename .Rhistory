shiny::runApp()
library(CLL)
BiocInstaller::biocLite('CLL')
BiocInstaller::biocLite('CLL')
library(CLL)
data(sCLLex)
sCLLex=sCLLex[,1:8] ## 样本太多，我就取前面8个
group_list=sCLLex$Disease
exprSet=exprs(sCLLex)
head(exprSet)
sCLLex
library('hgu95av2.db')
BiocInstaller::biocLite('hgu95av2.db')
library('hgu95av2.db')
probe2symbol=toTable(hgu95av2SYMBOL)
View(probe2symbol)
View(probe2symbol)
exprSet=as.data.frame(exprSet)
exprSet$probe_id=rownames(exprSet)
head(exprSet)
probe2symbol=toTable(hgu95av2SYMBOL)
dat=merge(exprSet,probe2symbol,by='probe_id')
View(dat)
dat=dat[,-1]
split(dat,dat$symbol)
?aggregate
?split
lapply(split(head(dat,100),dat$symbol),colMeans)
lapply(split(head(dat,100),dat$symbol,drop=F),colMeans)
split(1:10, 1:2)
split(head(dat,100),dat$symbol,drop=F)
split(head(dat),dat$symbol,drop=F)
split(head(dat),symbol,drop=F)
lapply(split(dat,dat$symbol),colMeans)
tmp=head(dat,100)
tmp
lapply(split(tmp,tmp$symbol),colMeans)
lapply(split(tmp,tmp$symbol),function(x) colMeans(as.matrix()))
lapply(split(tmp,tmp$symbol),function(x) colMeans(as.matrix(x)))
split(tmp,tmp$symbol)
split(tmp,tmp$symbol)$WNT10B
class(split(tmp,tmp$symbol)$WNT10B)
colMeans(split(tmp,tmp$symbol)$WNT10B)
lapply(split(tmp,tmp$symbol),function(x) colMeans(x[,1:(ncol(x)-1)])
)
lapply(split(tmp,tmp$symbol),function(x) colMeans(x[,1:(ncol(x)-1)]))
class(split(tmp,tmp$symbol)$WNT10B)
colMeans(split(tmp,tmp$symbol)$WNT10B)
split(tmp,tmp$symbol)$WNT10B
lapply(split(tmp,tmp$symbol),function(x) colMeans(x[,1:(ncol(x)-1)]))$WNT10B
sapply(split(tmp,tmp$symbol),function(x) colMeans(x[,1:(ncol(x)-1)]))
results=t(sapply(split(dat,dat$symbol),function(x) colMeans(x[,1:(ncol(x)-1)])))
View(results)
results['WNT10B',]
colMeans(split(tmp,tmp$symbol)$WNT10B)
split(tmp,tmp$symbol)$WNT10B
getwd()
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery('con','CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
city VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
name VARCHAR(25) NOT NULL,
characters VARCHAR(100) NOT NULL
)')
dbListTables('con')
dbSendQuery('con','CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
city VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
name VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL
)')
dbListTables('con')
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery('con','CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
city VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
name VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL
)')
con
dbSendQuery('con','CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
city VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
name VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL
)  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
name VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL,
KEY id (city_ip,mail)
)  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL,
KEY id (city_ip,mail)
)  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL,
KEY id (ip,mail)
)  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL,
KEY id (ip,mail)
)  ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL,
PRIMARY KEY id (ip,mail)
)  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL,
PRIMARY KEY id (ip,mail))  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,'CREATE TABLE IF NOT EXISTS contacts
(name VARCHAR(25) NOT NULL,
age INT(2) NOT NULL,
ip VARCHAR(16) NOT NULL,
city_ip VARCHAR(100) NOT NULL,
city_user VARCHAR(25) NOT NULL,
mail VARCHAR(25) NOT NULL,
phone INT(15) DEFAULT NULL,
married VARCHAR(25) NOT NULL,
desc VARCHAR(100) NOT NULL
)  ENGINE=InnoDB DEFAULT CHARSET=latin1 ')
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL,",
"    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 )"
))
dbListTables(con)
paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL,",
"    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 )"
)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL,",
"    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 "
))
dbListTables(con)
paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL,",
"    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 "
)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,
paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL,",
#  "    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 "
)
)
dbListTables(con)
paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL,",
#  "    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 "
)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,
paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL",
#  "    PRIMARY KEY id (ip,mail)",
" )  ENGINE=InnoDB DEFAULT CHARSET=latin1 "
)
)
dbListTables(con)
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone INT(15) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL",
" )   "
))
dbListTables(con)
dbListTables(con)
dbListTables(con)
dbSendQuery(con,"INSERT INTO contact (name,age,ip,city_ip,city_user,mail,phone,married,desc)
VALUES (jimmy,26,8.8.8.8,Macau,macau,jmzeng1314@163.com,13215794746,yes,perfect)")
dbSendQuery(con,"INSERT INTO contact (name,age,ip,city_ip,city_user,mail,phone,married,desc)
VALUES (jimmy,26,'8.8.8.8',Macau,macau,jmzeng1314@163.com,13215794746,yes,perfect)")
dbSendQuery(con,"INSERT INTO contact (name,age,ip,city_ip,city_user,mail,phone,married,desc)
VALUES (jimmy,26,'8.8.8.8',Macau,macau,'jmzeng1314@163.com',13215794746,yes,perfect)")
dbSendQuery(con,"INSERT INTO contacts (name,age,ip,city_ip,city_user,mail,phone,married,desc)
VALUES (jimmy,26,'8.8.8.8',Macau,macau,'jmzeng1314@163.com',13215794746,yes,perfect)")
dbSendQuery(con,"INSERT INTO contacts
(name,age,ip,city_ip,city_user,mail,phone,married,desc)
VALUES
('jimmy',26,'8.8.8.8','Macau','macau','jmzeng1314@163.com',13215794746,'yes','perfect')")
dbReadTable(con,'contacts')
dbReadTable(con,'contacts')
dbSendQuery(con,'drop table contacts')
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbSendQuery(con,paste("CREATE TABLE IF NOT EXISTS contacts ",
"(name VARCHAR(25) NOT NULL,",
"age INT(2) NOT NULL,",
"    ip VARCHAR(16) NOT NULL,",
"city_ip VARCHAR(100) NOT NULL,",
"city_user VARCHAR(25) NOT NULL,",
"mail VARCHAR(25) NOT NULL,",
"phone VARCHAR(20) DEFAULT NULL,",
" married VARCHAR(25) NOT NULL,",
"    desc VARCHAR(100) NOT NULL",
" )   "
))
dbListTables(con)
dbSendQuery(con,"INSERT INTO contacts
(name,age,ip,city_ip,city_user,mail,phone,married,desc)
VALUES
('jimmy',26,'8.8.8.8','Macau','macau','jmzeng1314@163.com',13215794746,'yes','perfect')")
dbReadTable(con,'contacts')
dbReadTable(con,'contacts')
runApp()
runApp()
characters=read.table('characters.txt',stringsAsFactors = F)
characters
read.table('characters.txt',stringsAsFactors = F,encoding = 'utf-8')
read.table('characters.txt',stringsAsFactors = F,encoding = 'utf-8')
read.table('characters.txt',stringsAsFactors = F,encoding = 'utf-8')
read.table('characters.txt',stringsAsFactors = F,encoding = 'JTF-8')
read.table('characters.txt',stringsAsFactors = F,encoding = 'UTF-8')
read.table('characters.txt',stringsAsFactors = F,encoding = 'GBK')
read.table('characters.txt',stringsAsFactors = F,encoding = 'UTF-8')
runApp()
suppressPackageStartupMessages(library(shiny))
suppressPackageStartupMessages(library(shinydashboard))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(shinyBS))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(shinyAce))
suppressPackageStartupMessages(library(knitr))
install.packages('shinyBS')
install.packages('shinyAce')
runApp()
suppressPackageStartupMessages(library(shinyjs))
install.packages('shinyjs')
runApp()
？selectizeInput
?selectizeInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(RSQLite)
sqlite    <- dbDriver("SQLite")
con <- dbConnect(sqlite,"contacts.sqlite") # makes a new file
dbReadTable(con,'contacts')
runApp()
runApp()
dbReadTable(con,'contacts')
runApp()
runApp()
runApp()
runApp()
paste(1:20,sep = ',')
paste(1:20,collapse= ',')
runApp()
dbReadTable(con,'contacts')
